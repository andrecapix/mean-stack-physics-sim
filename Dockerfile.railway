# Multi-stage build for production optimization
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files first for better layer caching
COPY mean-api/package*.json ./
RUN npm install --legacy-peer-deps

# Copy source code and build
COPY mean-api/ .
RUN npm run build

# Production stage
FROM node:20-alpine

WORKDIR /app

# Copy package files and install production dependencies only
COPY mean-api/package*.json ./
RUN npm install --omit=dev --legacy-peer-deps && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:$PORT/health || exit 1

# Use environment variable for port (Railway compatibility)
ENV PORT=3000
EXPOSE $PORT

# Production command
CMD ["npm", "run", "start:prod"]